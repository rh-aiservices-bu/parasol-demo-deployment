apiVersion: apps/v1
kind: Deployment
metadata:
  name: milvus-backup
  namespace: parasol-demo-milvus
  labels:
    app: ic-shared-milvus
    component: milvus-backup
spec:
  replicas: 1
  selector:
    matchLabels:
      app: milvus-backup
      component: milvus-backup
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: milvus-backup
        component: milvus-backup
    spec:
      initContainers:
      - name: wait-for-minio
        image: image-registry.openshift-image-registry.svc:5000/openshift/tools:latest
        imagePullPolicy: IfNotPresent
        command: ["/bin/bash"]
        args:
        - -ec
        - |-
          echo -n "Waiting for minio pod in parasol-demo namespace"
          while ! nc -z minio.parasol-demo.svc.cluster.local 9000; do
            echo -n '.'
            sleep 1
          done
          echo "Minio pod is running in parasol-demo namespace"
      - name: wait-for-milvus
        image: image-registry.openshift-image-registry.svc:5000/openshift/tools:latest
        imagePullPolicy: IfNotPresent
        command: ["/bin/bash"]
        args:
        - -ec
        - |-
          echo -n "Waiting for milvus pod in parasol-demo namespace"
          while ! nc -z vectordb-milvus.parasol-demo-milvus.svc.cluster.local 19530; do
            echo -n '.'
            sleep 1
          done
          echo "Milvus pod is running in parasol-demo namespace"
      containers:
      - name: milvus-backup
        image: quay.io/rh-aiservices-bu/milvus-backup:v0.4.12
        imagePullPolicy: Always
        args:
          - server
          - '--config=/opt/app-root/src/milvus-backup/configs/backup.yaml'
          - '-p'
          - '8080'
        securityContext:
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        resources:
          limits:
            cpu: '2'
            memory: 4Gi
          requests:
            cpu: '1'
            memory: 2Gi
        readinessProbe:
          httpGet:
            path: /
            port: http
            scheme: HTTP
          timeoutSeconds: 5
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /
            port: http
            scheme: HTTP
          timeoutSeconds: 8
          periodSeconds: 100
          successThreshold: 1
          failureThreshold: 3
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - name: config-volume
          mountPath: /opt/app-root/src/milvus-backup/configs/backup.yaml
          subPath: backup.yaml
          readOnly: true
      restartPolicy: Always
      volumes:
      - name: config-volume
        configMap:
          name: milvus-backup-configmap
          items:
          - key: backup.yaml
            path: backup.yaml